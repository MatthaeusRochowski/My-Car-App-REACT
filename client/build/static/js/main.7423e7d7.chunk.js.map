{"version":3,"sources":["services/auth.js","components/Navbar.js","components/Startpage.js","components/Signup.js","components/Login.js","components/Car.js","components/MyCars.js","App.js","serviceWorker.js","index.js"],"names":["signup","username","password","axios","post","then","response","data","catch","err","login","Navbar","props","className","bg","user","to","onClick","delete","setUser","Startpage","React","Component","Signup","state","error","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","message","history","push","console","log","this","Form","onSubmit","Group","Label","htmlFor","Control","type","id","onChange","Alert","variant","Button","Login","Car","car","src","bild","alt","kennzeichen","hersteller","modell","erstzulassung_monat","erstzulassung_jahr","kilometerstand","MyCars","cars","getData","get","map","key","_id","App","myCarsRoute","exact","path","component","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7423e7d7.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst signup = (username, password) => {\r\n  return axios\r\n    .post(\"/api/auth/signup\", {\r\n      username: username,\r\n      password: password\r\n    })\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .catch(err => {\r\n      return err.response.data;\r\n    });\r\n};\r\n\r\nconst login = (username, password) => {\r\n  return axios\r\n    .post(\"/api/auth/login\", {\r\n      username: username,\r\n      password: password\r\n    })\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .catch(err => {\r\n      return err.response.data;\r\n    });\r\n};\r\n\r\nconst logout = () => {\r\n  axios.delete(\"/api/auth/logout\");\r\n};\r\n\r\nexport { signup, login, logout };\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navbar as Nav } from \"react-bootstrap\";\r\nimport { logout } from \"../services/auth\";\r\n\r\nconst Navbar = props => {\r\n  const handleLogout = () => {\r\n    // destroys the session on the server\r\n    logout();\r\n    // updates the `user` state in App\r\n    props.setUser(null);\r\n  };\r\n\r\n  return (\r\n    <Nav className=\"nav justify-content-end\" bg=\"primary\">\r\n      {props.user ? (\r\n        <div>\r\n          <Link to=\"/myCars\">Mein Fuhrpark</Link>\r\n          <Link to=\"/\" onClick={handleLogout}>\r\n            Logout\r\n          </Link>\r\n        </div>\r\n      ) : (\r\n        <div >\r\n          <Link to=\"/\" >Home</Link>\r\n          <Link to=\"/signup\">Signup</Link>\r\n          <Link to=\"/login\">Login</Link>\r\n        </div>\r\n      )}\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nclass Startpage extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Startpage</h1>\r\n                <p> ... this is the homepage of the application ... </p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Startpage;","import React, { Component } from \"react\";\r\nimport { signup } from \"../services/auth\";\r\nimport { Alert, Form, Button } from \"react-bootstrap\";\r\n\r\nclass Signup extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    error: \"\"\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    signup(this.state.username, this.state.password).then(data => {\r\n      if (data.message) {\r\n        // handle errors\r\n        this.setState({\r\n          error: data.message\r\n        });\r\n      } else {\r\n        // no error\r\n        // lift the data up to the App state\r\n        this.props.setUser(data);\r\n        // redirect to \"/myCars\"\r\n        this.props.history.push(\"/myCars\");\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <div>\r\n        <h2>Signup</h2>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"username\">Username: </Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"username\"\r\n              id=\"username\"\r\n              value={this.state.username}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"password\">Password: </Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          {this.state.error && (\r\n            <Alert variant=\"danger\">{this.state.error}</Alert>\r\n          )}\r\n          <Button type=\"submit\">Sign up</Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signup;\r\n","import React, { Component } from \"react\";\r\nimport { login } from \"../services/auth\";\r\nimport { Alert, Form, Button } from \"react-bootstrap\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    username: \"MatthÃ¤us\",\r\n    password: \"12345678\",\r\n    error: \"\"\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    login(this.state.username, this.state.password).then(data => {\r\n      if (data.message) {\r\n        // handle errors\r\n        this.setState({\r\n          error: data.message\r\n        });\r\n      } else {\r\n        // no error\r\n        // lift the data up to the App state\r\n        this.props.setUser(data);\r\n        // redirect to \"/mycars\"\r\n        this.props.history.push(\"/myCars\");\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Login</h2>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"username\">Username: </Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"username\"\r\n              id=\"username\"\r\n              value={this.state.username}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"password\">Password: </Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          {this.state.error && (\r\n            <Alert variant=\"danger\">{this.state.error}</Alert>\r\n          )}\r\n          <Button type=\"submit\">Log in</Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Car extends Component {\r\n  render() {\r\n    console.log(\"Car -----> rendered\");\r\n    console.log(\"Car ---> props\", this.props.car)\r\n    return (\r\n\r\n<div className=\"car-partial\">\r\n\r\n    <div className=\"car-img-div\"><img src={this.props.car.bild} className=\"car-image\" alt=\"Autobild\"/></div>\r\n    <p className=\"p-class\"><span>Kennzeichen:</span><span>{this.props.car.kennzeichen}</span></p>\r\n    \r\n    <p className=\"p-class\"><span>Hersteller:</span><span>{this.props.car.hersteller}</span></p>\r\n    \r\n    <p className=\"p-class\"><span>Modell:</span><span>{this.props.car.modell}</span></p>\r\n    \r\n    <p className=\"p-class\"><span>Erstzulassung:</span><span>{this.props.car.erstzulassung_monat} / {this.props.car.erstzulassung_jahr}</span></p>\r\n    \r\n    <p className=\"p-class\"><span>Kilometerstand:</span><span>{this.props.car.kilometerstand} km</span></p>\r\n\r\n</div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport Car from './Car';\r\n\r\nexport default class MyCars extends Component {\r\n  state = {\r\n    cars: []\r\n  };\r\n\r\n  getData = () => {\r\n    axios\r\n      .get(\"/api/myCars\")\r\n      .then(response => {\r\n        this.setState({\r\n          cars: response.data\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n  \r\n  render() {\r\n    console.log(\"myCars -----> rendered\");\r\n    console.log(this.state.cars)\r\n\r\n    return (\r\n      <div>\r\n      <h1>Hi {this.props.user.username}</h1>\r\n      <h3>Dein aktueller Fuhrpark</h3>\r\n        <section id=\"car-overview\">\r\n          <div className=\"cards-container\">\r\n          {this.state.cars.map(car => {\r\n            return (\r\n          \r\n              <Car key={car._id} car={car} />\r\n              \r\n            )\r\n          })}\r\n\r\n          </div>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport {Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Startpage from \"./components/Startpage\";\r\nimport Signup from \"./components/Signup\";\r\nimport Login from \"./components/Login\";\r\nimport MyCars from \"./components/MyCars\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    user: this.props.user\r\n  };\r\n\r\n  setUser = user => {\r\n    this.setState({\r\n      user: user\r\n    });\r\n  };\r\n\r\n  myCarsRoute = props => {\r\n    if (this.state.user) {\r\n      return <MyCars {...props} user={this.state.user} />;\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log(\"App -----> rendered\")\r\n    return (\r\n      <div className=\"App\">\r\n        <Navbar user={this.state.user} setUser={this.setUser} />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Startpage} />\r\n          <Route exact path=\"/signup\" render={\r\n            props => <Signup {...props} setUser={this.setUser} />\r\n          }/>\r\n          <Route exact path=\"/login\" render={\r\n            props => <Login {...props} setUser={this.setUser} />\r\n          }/>\r\n          <Route exact path=\"/myCars\" render={this.myCarsRoute}/>\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.css\"; // npm install boostrap\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\naxios.get(\"/api/auth/loggedin\").then(response => {\r\n  const user = response.data;\r\n\r\n  ReactDOM.render(\r\n    <BrowserRouter>\r\n      <App user={user} />\r\n    </BrowserRouter>,\r\n    document.getElementById(\"root\")\r\n  );\r\n});\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}